name: 'Get Traffic Manager Staging Endpoint'
description: 'Returns the App Service backing the current active endpoint for the Traffic Manager Profile name supplied.'
inputs:
  tm-name:
    description: 'The Azure resource name of the Traffic Manager Profile to deploy to.'
    required: true
outputs:
  app-name:
    description: 'The Azure resource name of the App Service the active endpoint belonging staging Traffic Manager profile is pointing to.'
    value: ${{ steps.get-endpoint.outputs.app-name}}
runs:
  using: "composite"
  steps:
  - name: Deploy to enabled Staging Traffic Manager endpoint.
    id: get-endpoint
    shell: bash
    run: |
      TM_NAME=${{ inputs.app-name }}
      token=$(curl 'http://169.254.169.254/metadata/identity/oauth2/token?api-version=2018-02-01&resource=https%3A%2F%2Fmanagement.azure.com' -H Metadata:true -s | jq -r .access_token)
      TM_PROFILE_FILTER=".value[] | select(.name==\"$TM_NAME\") | { deploymentTargets : [ .properties.endpoints[] | select(.properties.endpointStatus==\"Enabled\") ] }"
      subscriptions=$(curl -X GET https://management.azure.com/subscriptions?api-version=2020-01-01 -H "Authorization: Bearer $token" | jq  -r '.value[].subscriptionId')
      for sub in $subscriptions; do
          TM_ALL_PROFILES=$(curl -X GET "https://management.azure.com/subscriptions/$sub/providers/Microsoft.Network/trafficmanagerprofiles?api-version=2018-08-01" -H "Authorization: Bearer $token" -H "Content-Type: application/json")
          if [[ $(jq 'has("error")' <<<$TM_ALL_PROFILES) == "true" ]]; then echo $(jq .error.message <<<$TM_ALL_PROFILES); fi
          TM_PROFILE=$(jq -r "$TM_PROFILE_FILTER" <<<$TM_ALL_PROFILES)
          if [[ $TM_PROFILE != "" ]]; then TM_SUB=$sub; break; fi
      done
      if [[ -z $TM_PROFILE ]]; then echo "error: traffic manager profile not found."; exit 1; fi
      TM_DEPLOYMENT_TARGET_APP_NAME=$(jq -r -c ".deploymentTargets[].properties | .target"  <<<$TM_PROFILE | cut -d . -f1 )
      TM_DEPLOYMENT_TARGET_COUNT=$(jq -r ".deploymentTargets | length"  <<<$TM_PROFILE)
      TM_DEPLOYMENT_TARGET_COLOR=$(jq -r -c "[ .deploymentTargets[].name ]"  <<<$TM_PROFILE)
      if [[ $TM_DEPLOYMENT_TARGET_COUNT -eq 1 ]];
          then
              echo "info: will deploy to $TM_DEPLOYMENT_TARGET_COLOR" 
              echo "info: will deploy to $TM_DEPLOYMENT_TARGET_APP_NAME" 
              ::set-output name=app-name::$(echo $TM_DEPLOYMENT_TARGET_APP_NAME)
          elif [[ $TM_DEPLOYMENT_TARGET_COUNT -gt 1 ]]; 
              then 
              echo "error: expected 1 deployment target, got ${TM_DEPLOYMENT_TARGET_COUNT}: $TM_DEPLOYMENT_TARGET_COLOR"
              exit 1
          elif [[ $TM_DEPLOYMENT_TARGET_COUNT -lt 1 ]]; 
              then 
              echo "error: expected 1 deployment target, got ${TM_DEPLOYMENT_TARGET_COUNT}: $TM_DEPLOYMENT_TARGET_COLOR"
              exit 1
          else 
              echo "error: you may not be logged in to the azure cli. expected expected a number, got: $TM_DEPLOYMENT_TARGET_COUNT"
              exit 1
      fi
